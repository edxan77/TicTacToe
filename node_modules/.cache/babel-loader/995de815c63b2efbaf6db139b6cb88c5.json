{"ast":null,"code":"var _jsxFileName = \"/home/edxan77/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/xo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      console.log(action.payload.quantity);\n      return {\n        count: state.count - action.payload.quantity\n      };\n\n    case \"reset\":\n      return {\n        count: 0\n      };\n\n    case \"add12\":\n      return {\n        count: action.payload.quantity + state\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [val, setval] = useState(0);\n\n  const v = function (e) {\n    setval(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Count: \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\"\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\"\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"reset\"\n      }),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"add12\",\n        payload: {\n          quantity: val\n        }\n      }),\n      children: \"add 12\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: v\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"4oL5KEUlz/6+20wNugcJEDnLCUQ=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/edxan77/Рабочий стол/xo/src/App.js"],"names":["useReducer","useState","initialState","count","reducer","state","action","type","console","log","payload","quantity","Error","Counter","dispatch","val","setval","v","e","target","value"],"mappings":";;;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,QAA3B;AACA,aAAO;AAAER,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcG,MAAM,CAACI,OAAP,CAAeC;AAAtC,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeC,QAAf,GAA0BN;AAAnC,OAAP;;AACF;AACE,YAAM,IAAIO,KAAJ,EAAN;AAXJ;AAaD;;AAED,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBd,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AACA,QAAM,CAACa,GAAD,EAAKC,MAAL,IAAef,QAAQ,CAAC,CAAD,CAA7B;;AAEA,QAAMgB,CAAC,GAAG,UAASC,CAAT,EAAW;AACnBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACD,GAFD;;AAIA,sBACE;AAAA,0BACUf,KAAK,CAACF,KADhB,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMW,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AACE,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,OAAR;AAAiBG,QAAAA,OAAO,EAAE;AAAEC,UAAAA,QAAQ,EAAEI;AAAZ;AAA1B,OAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAO,MAAA,QAAQ,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD;;GAtBQJ,O;;KAAAA,O;AAuBT,eAAeA,OAAf","sourcesContent":["\nimport { useReducer, useState } from \"react\";\n\nconst initialState = { count: 0 };\n\n\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      console.log(action.payload.quantity)\n      return { count: state.count - action.payload.quantity };\n    case \"reset\":\n      return { count: 0 };\n    case \"add12\":\n      return { count: action.payload.quantity + state };\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [val,setval] = useState(0)\n\n  const v = function(e){\n    setval(e.target.value)\n  }\n\n  return (\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => dispatch({ type: \"reset\" })}>reset</button>\n      <button\n        onClick={() => dispatch({ type: \"add12\", payload: { quantity: val } })}\n      >\n        add 12\n      </button>\n      <input onChange={v}></input>\n    </>\n  );\n}\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}