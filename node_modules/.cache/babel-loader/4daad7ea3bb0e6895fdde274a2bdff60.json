{"ast":null,"code":"var _jsxFileName = \"/home/edxan77/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/xo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  countt: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      if (state < 5) {\n        console.log(state);\n        console.log(action);\n        console.log(initialState.countt);\n        return state + 1;\n      } else {\n        return {\n          count: 0\n        };\n      }\n\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n\n    case \"reset\":\n      return {\n        count: 0\n      };\n\n    case \"add12\":\n      return {\n        count: state.count + action.payload.quantity\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Coun: \", state, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\"\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\"\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"reset\"\n      }),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"add12\",\n        payload: {\n          quantity: 12\n        }\n      }),\n      children: \"add 12\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/edxan77/Рабочий стол/xo/src/App.js"],"names":["useReducer","useState","initialState","countt","reducer","state","action","type","console","log","count","payload","quantity","Error","Counter","dispatch"],"mappings":";;;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAArB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,UAAGF,KAAK,GAAC,CAAT,EAAW;AACTG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACC,MAAzB;AACF,eAAOE,KAAK,GAAC,CAAb;AACC,OALD,MAKK;AACH,eAAO;AAACK,UAAAA,KAAK,EAAC;AAAP,SAAP;AACD;;AACH,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;;AACF,SAAK,OAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,GAAcJ,MAAM,CAACK,OAAP,CAAeC;AAAtC,OAAP;;AACF;AACE,YAAM,IAAIC,KAAJ,EAAN;AAjBJ;AAmBD;;AAED,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBf,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE;AAAA,yBACSG,KADT,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMU,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AACE,MAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAER,QAAAA,IAAI,EAAE,OAAR;AAAiBI,QAAAA,OAAO,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAA1B,OAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD;;GAjBQE,O;;KAAAA,O;AAkBT,eAAeA,OAAf","sourcesContent":["\nimport { useReducer, useState } from \"react\";\n\nconst initialState = { countt: 0};\n\n\n\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      if(state<5){\n        console.log(state)\n        console.log(action)\n        console.log(initialState.countt)\n      return state+1;\n      }else{\n        return {count:0}\n      }\n    case \"decrement\":\n      return { count: state.count - 1 };\n    case \"reset\":\n      return { count: 0 };\n    case \"add12\":\n      return { count: state.count + action.payload.quantity };\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <>\n      Coun: {state}\n      <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n      <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => dispatch({ type: \"reset\" })}>reset</button>\n      <button\n        onClick={() => dispatch({ type: \"add12\", payload: { quantity: 12 } })}\n      >\n        add 12\n      </button>\n      <input></input>\n    </>\n  );\n}\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}